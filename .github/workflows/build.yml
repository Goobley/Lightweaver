name: BuildWheels

on:
  workflow_dispatch:

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - run: python -m pip install pep517
    - run: python -m pep517.build --source .

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz

  build_wheels:
    name: Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - run: python -m pip install cibuildwheel

    - run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: cp38-* cp39-* cp310-*
        CIBW_ARCHS: auto64
        CIBW_ENVIRONMENT: 'LW_CI_BUILD=true'
        CIBW_BUILD_VERBOSITY: 1
        CIBW_ARCHS_MACOS: x86_64 universal2
        # NOTE(cmo): This is possibly silly as the library is already present
        # inside the wheel, but the audiwheel won't look for it there, and I
        # don't see how to put it on LD_LIBRARY_PATH, so copy the prebuilt one
        # over it.
        # Thanks: https://vinayak.io/2020/10/13/day-45-i-have-linux-and-macos-wheels/
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "LD_LIBRARY_PATH=$(pwd)/LwBuild/lightweaver/:$LD_LIBRARY_PATH auditwheel repair -w {dest_dir} {wheel}"
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: "DYLD_LIBRARY_PATH=$(pwd)/LwBuild/lightweaver/:$DYLD_LIBRARY_PATH && export DYLD_LIBRARY_PATH && delocate-listdeps {wheel} && delocate-wheel -w {dest_dir} -v {wheel}"

    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl
